// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: UserService.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace UserService {

  /// <summary>Holder for reflection information generated from UserService.proto</summary>
  public static partial class UserServiceReflection {

    #region Descriptor
    /// <summary>File descriptor for UserService.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static UserServiceReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChFVc2VyU2VydmljZS5wcm90bxILVXNlclNlcnZpY2UiIAoMQ2l0aXplblJl",
            "cGx5EhAKCFVzZXJVSUlEGAEgASgJIlwKD0NpdGl6ZW5SZWdpc3RlchIQCghJ",
            "RE51bWJlchgBIAEoCRILCgNOSUYYAiABKAkSDAoETmFtZRgDIAEoCRIPCgdB",
            "ZGRyZXNzGAQgASgJEgsKA05JQhgFIAEoCTJYCgtVc2VyU2VydmljZRJJCgxS",
            "ZWdpc3RlclVzZXISHC5Vc2VyU2VydmljZS5DaXRpemVuUmVnaXN0ZXIaGS5V",
            "c2VyU2VydmljZS5DaXRpemVuUmVwbHkiAGIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::UserService.CitizenReply), global::UserService.CitizenReply.Parser, new[]{ "UserUIID" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::UserService.CitizenRegister), global::UserService.CitizenRegister.Parser, new[]{ "IDNumber", "NIF", "Name", "Address", "NIB" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class CitizenReply : pb::IMessage<CitizenReply> {
    private static readonly pb::MessageParser<CitizenReply> _parser = new pb::MessageParser<CitizenReply>(() => new CitizenReply());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CitizenReply> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::UserService.UserServiceReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CitizenReply() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CitizenReply(CitizenReply other) : this() {
      userUIID_ = other.userUIID_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CitizenReply Clone() {
      return new CitizenReply(this);
    }

    /// <summary>Field number for the "UserUIID" field.</summary>
    public const int UserUIIDFieldNumber = 1;
    private string userUIID_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string UserUIID {
      get { return userUIID_; }
      set {
        userUIID_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CitizenReply);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CitizenReply other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UserUIID != other.UserUIID) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (UserUIID.Length != 0) hash ^= UserUIID.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (UserUIID.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(UserUIID);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (UserUIID.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(UserUIID);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CitizenReply other) {
      if (other == null) {
        return;
      }
      if (other.UserUIID.Length != 0) {
        UserUIID = other.UserUIID;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            UserUIID = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class CitizenRegister : pb::IMessage<CitizenRegister> {
    private static readonly pb::MessageParser<CitizenRegister> _parser = new pb::MessageParser<CitizenRegister>(() => new CitizenRegister());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CitizenRegister> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::UserService.UserServiceReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CitizenRegister() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CitizenRegister(CitizenRegister other) : this() {
      iDNumber_ = other.iDNumber_;
      nIF_ = other.nIF_;
      name_ = other.name_;
      address_ = other.address_;
      nIB_ = other.nIB_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CitizenRegister Clone() {
      return new CitizenRegister(this);
    }

    /// <summary>Field number for the "IDNumber" field.</summary>
    public const int IDNumberFieldNumber = 1;
    private string iDNumber_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string IDNumber {
      get { return iDNumber_; }
      set {
        iDNumber_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "NIF" field.</summary>
    public const int NIFFieldNumber = 2;
    private string nIF_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string NIF {
      get { return nIF_; }
      set {
        nIF_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Name" field.</summary>
    public const int NameFieldNumber = 3;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Address" field.</summary>
    public const int AddressFieldNumber = 4;
    private string address_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Address {
      get { return address_; }
      set {
        address_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "NIB" field.</summary>
    public const int NIBFieldNumber = 5;
    private string nIB_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string NIB {
      get { return nIB_; }
      set {
        nIB_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CitizenRegister);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CitizenRegister other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (IDNumber != other.IDNumber) return false;
      if (NIF != other.NIF) return false;
      if (Name != other.Name) return false;
      if (Address != other.Address) return false;
      if (NIB != other.NIB) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (IDNumber.Length != 0) hash ^= IDNumber.GetHashCode();
      if (NIF.Length != 0) hash ^= NIF.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (Address.Length != 0) hash ^= Address.GetHashCode();
      if (NIB.Length != 0) hash ^= NIB.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (IDNumber.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(IDNumber);
      }
      if (NIF.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(NIF);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Name);
      }
      if (Address.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Address);
      }
      if (NIB.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(NIB);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (IDNumber.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(IDNumber);
      }
      if (NIF.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(NIF);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (Address.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Address);
      }
      if (NIB.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(NIB);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CitizenRegister other) {
      if (other == null) {
        return;
      }
      if (other.IDNumber.Length != 0) {
        IDNumber = other.IDNumber;
      }
      if (other.NIF.Length != 0) {
        NIF = other.NIF;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.Address.Length != 0) {
        Address = other.Address;
      }
      if (other.NIB.Length != 0) {
        NIB = other.NIB;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            IDNumber = input.ReadString();
            break;
          }
          case 18: {
            NIF = input.ReadString();
            break;
          }
          case 26: {
            Name = input.ReadString();
            break;
          }
          case 34: {
            Address = input.ReadString();
            break;
          }
          case 42: {
            NIB = input.ReadString();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
